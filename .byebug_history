q
match_data["id"]
match_data.["id"]
match_data.["id]
match_data.id
match_data[id]
match_data.names
match_data.vals
match_data.values
match_data.names
match_data = @pattern.match(req.path)
@pattern.match(req.path)
@pattern
req.path
route_params
q
self.routes.length
self.routes
self
req.path
req
req.params
q
n
req.params
n
c
req.params
n
req.params
q
@req.params.merge(params)
@req.params
@req
params
res.params
req.params
q
match_data
q
match_data.methods
match_data.names << contro
match_data.methods
match_data
q
match_data
q
@pattern
@pattern.match("/use")
@pattern.match("/users")
@pattern.match("/users/")
@pattern.match("/users")
@pattern.match("/users/5/")
@pattern.match("dsdsad")
@pattern.match(req.path)
@pattern
@patter
req.path
req
q
match_data
q
req.path
@pattern.match("/users")
@pattern.match("/users/42")
@pattern.match
@pattern.class
@pattern
q
proc.source_location
proc
&proc
q
self.methods
self.class
self
proc.call
proc
proc.call
prc.call
prc
q
match(req)
@routes
route
q
params
q
self
params
q
@pattern
q
req.path.class
req.path
req/path
req.class
req
@pattern.class
@pattern
q
@http_method
req.request_method
(@pattern =~ req.path)
!!(@pattern =~ req.path)
(@pattern =~ req.path).nil?
@pattern =~ req.path
@pattern
req.path
req.env
req
res
req.env
req
self
req
q
cookie_hash
(cookie_hash['test_key'])
q
n
value
key
q
JSON.parse(a)
a = req.cookies["_rails_lite_app"]
JSON.parse(_)
req.cookies["_rails_lite_app"]
req.cookies
req
q
@res["Content-Type"]
@res.finish
@res
q
y
q
content_type
content
self
@res
q
@res.header["Content-Type"]
@res.header["Content Type"]
@res.header
@res.writer
@res
@res.res
@res.ees
@res.methods
@res.class
@res
@res["Content Type"]
@res
q
@res.finish[1]
@res.finish.class
@res.finish["Content-Type"]
@res.finish
q
res["Content-Type"]
res
